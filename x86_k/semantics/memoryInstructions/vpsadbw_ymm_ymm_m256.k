// Autogenerated using stratification.
requires "x86-configuration.k"

module VPSADBW-YMM-YMM-M256
  imports X86-CONFIGURATION

  context execinstr(vpsadbw:Opcode HOLE:Mem, R2:Ymm, R3:Ymm,  .Operands) [result(MemOffset)]
  
  rule <k>
    execinstr (vpsadbw:Opcode memOffset( MemOff:MInt):MemOffset, R2:Ymm, R3:Ymm,  .Operands) =>
      loadFromMemory( MemOff, 256) ~>
      execinstr (vpsadbw memOffset( MemOff), R2:Ymm, R3:Ymm,  .Operands)
  ...</k>
    <regstate> RSMap:Map </regstate>
          
  rule <k>
    memLoadValue(Mem256:MInt):MemLoadValue ~> execinstr (vpsadbw:Opcode memOffset( MemOff:MInt):MemOffset, R2:Ymm, R3:Ymm,  .Operands) =>
      .
  ...</k>
    <regstate>
      RSMap:Map => updateMap(RSMap,
convToRegKeys(R3) |-> concatenateMInt( concatenateMInt( mi(48, 0), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( getParentValue(R2, RSMap), 0, 8), extractMInt( Mem256, 0, 8)) #then subMInt( extractMInt( getParentValue(R2, RSMap), 0, 8), extractMInt( Mem256, 0, 8)) #else subMInt( extractMInt( Mem256, 0, 8), extractMInt( getParentValue(R2, RSMap), 0, 8)) #fi)), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( getParentValue(R2, RSMap), 8, 16), extractMInt( Mem256, 8, 16)) #then subMInt( extractMInt( getParentValue(R2, RSMap), 8, 16), extractMInt( Mem256, 8, 16)) #else subMInt( extractMInt( Mem256, 8, 16), extractMInt( getParentValue(R2, RSMap), 8, 16)) #fi)), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( getParentValue(R2, RSMap), 16, 24), extractMInt( Mem256, 16, 24)) #then subMInt( extractMInt( getParentValue(R2, RSMap), 16, 24), extractMInt( Mem256, 16, 24)) #else subMInt( extractMInt( Mem256, 16, 24), extractMInt( getParentValue(R2, RSMap), 16, 24)) #fi)), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( getParentValue(R2, RSMap), 24, 32), extractMInt( Mem256, 24, 32)) #then subMInt( extractMInt( getParentValue(R2, RSMap), 24, 32), extractMInt( Mem256, 24, 32)) #else subMInt( extractMInt( Mem256, 24, 32), extractMInt( getParentValue(R2, RSMap), 24, 32)) #fi)), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( getParentValue(R2, RSMap), 32, 40), extractMInt( Mem256, 32, 40)) #then subMInt( extractMInt( getParentValue(R2, RSMap), 32, 40), extractMInt( Mem256, 32, 40)) #else subMInt( extractMInt( Mem256, 32, 40), extractMInt( getParentValue(R2, RSMap), 32, 40)) #fi)), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( getParentValue(R2, RSMap), 40, 48), extractMInt( Mem256, 40, 48)) #then subMInt( extractMInt( getParentValue(R2, RSMap), 40, 48), extractMInt( Mem256, 40, 48)) #else subMInt( extractMInt( Mem256, 40, 48), extractMInt( getParentValue(R2, RSMap), 40, 48)) #fi)), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( getParentValue(R2, RSMap), 48, 56), extractMInt( Mem256, 48, 56)) #then subMInt( extractMInt( getParentValue(R2, RSMap), 48, 56), extractMInt( Mem256, 48, 56)) #else subMInt( extractMInt( Mem256, 48, 56), extractMInt( getParentValue(R2, RSMap), 48, 56)) #fi)), concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( getParentValue(R2, RSMap), 56, 64), extractMInt( Mem256, 56, 64)) #then subMInt( extractMInt( getParentValue(R2, RSMap), 56, 64), extractMInt( Mem256, 56, 64)) #else subMInt( extractMInt( Mem256, 56, 64), extractMInt( getParentValue(R2, RSMap), 56, 64)) #fi)))))))))), concatenateMInt( concatenateMInt( mi(48, 0), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( getParentValue(R2, RSMap), 64, 72), extractMInt( Mem256, 64, 72)) #then subMInt( extractMInt( getParentValue(R2, RSMap), 64, 72), extractMInt( Mem256, 64, 72)) #else subMInt( extractMInt( Mem256, 64, 72), extractMInt( getParentValue(R2, RSMap), 64, 72)) #fi)), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( getParentValue(R2, RSMap), 72, 80), extractMInt( Mem256, 72, 80)) #then subMInt( extractMInt( getParentValue(R2, RSMap), 72, 80), extractMInt( Mem256, 72, 80)) #else subMInt( extractMInt( Mem256, 72, 80), extractMInt( getParentValue(R2, RSMap), 72, 80)) #fi)), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( getParentValue(R2, RSMap), 80, 88), extractMInt( Mem256, 80, 88)) #then subMInt( extractMInt( getParentValue(R2, RSMap), 80, 88), extractMInt( Mem256, 80, 88)) #else subMInt( extractMInt( Mem256, 80, 88), extractMInt( getParentValue(R2, RSMap), 80, 88)) #fi)), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( getParentValue(R2, RSMap), 88, 96), extractMInt( Mem256, 88, 96)) #then subMInt( extractMInt( getParentValue(R2, RSMap), 88, 96), extractMInt( Mem256, 88, 96)) #else subMInt( extractMInt( Mem256, 88, 96), extractMInt( getParentValue(R2, RSMap), 88, 96)) #fi)), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( getParentValue(R2, RSMap), 96, 104), extractMInt( Mem256, 96, 104)) #then subMInt( extractMInt( getParentValue(R2, RSMap), 96, 104), extractMInt( Mem256, 96, 104)) #else subMInt( extractMInt( Mem256, 96, 104), extractMInt( getParentValue(R2, RSMap), 96, 104)) #fi)), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( getParentValue(R2, RSMap), 104, 112), extractMInt( Mem256, 104, 112)) #then subMInt( extractMInt( getParentValue(R2, RSMap), 104, 112), extractMInt( Mem256, 104, 112)) #else subMInt( extractMInt( Mem256, 104, 112), extractMInt( getParentValue(R2, RSMap), 104, 112)) #fi)), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( getParentValue(R2, RSMap), 112, 120), extractMInt( Mem256, 112, 120)) #then subMInt( extractMInt( getParentValue(R2, RSMap), 112, 120), extractMInt( Mem256, 112, 120)) #else subMInt( extractMInt( Mem256, 112, 120), extractMInt( getParentValue(R2, RSMap), 112, 120)) #fi)), concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( getParentValue(R2, RSMap), 120, 128), extractMInt( Mem256, 120, 128)) #then subMInt( extractMInt( getParentValue(R2, RSMap), 120, 128), extractMInt( Mem256, 120, 128)) #else subMInt( extractMInt( Mem256, 120, 128), extractMInt( getParentValue(R2, RSMap), 120, 128)) #fi)))))))))), concatenateMInt( concatenateMInt( mi(48, 0), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( getParentValue(R2, RSMap), 128, 136), extractMInt( Mem256, 128, 136)) #then subMInt( extractMInt( getParentValue(R2, RSMap), 128, 136), extractMInt( Mem256, 128, 136)) #else subMInt( extractMInt( Mem256, 128, 136), extractMInt( getParentValue(R2, RSMap), 128, 136)) #fi)), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( getParentValue(R2, RSMap), 136, 144), extractMInt( Mem256, 136, 144)) #then subMInt( extractMInt( getParentValue(R2, RSMap), 136, 144), extractMInt( Mem256, 136, 144)) #else subMInt( extractMInt( Mem256, 136, 144), extractMInt( getParentValue(R2, RSMap), 136, 144)) #fi)), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( getParentValue(R2, RSMap), 144, 152), extractMInt( Mem256, 144, 152)) #then subMInt( extractMInt( getParentValue(R2, RSMap), 144, 152), extractMInt( Mem256, 144, 152)) #else subMInt( extractMInt( Mem256, 144, 152), extractMInt( getParentValue(R2, RSMap), 144, 152)) #fi)), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( getParentValue(R2, RSMap), 152, 160), extractMInt( Mem256, 152, 160)) #then subMInt( extractMInt( getParentValue(R2, RSMap), 152, 160), extractMInt( Mem256, 152, 160)) #else subMInt( extractMInt( Mem256, 152, 160), extractMInt( getParentValue(R2, RSMap), 152, 160)) #fi)), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( getParentValue(R2, RSMap), 160, 168), extractMInt( Mem256, 160, 168)) #then subMInt( extractMInt( getParentValue(R2, RSMap), 160, 168), extractMInt( Mem256, 160, 168)) #else subMInt( extractMInt( Mem256, 160, 168), extractMInt( getParentValue(R2, RSMap), 160, 168)) #fi)), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( getParentValue(R2, RSMap), 168, 176), extractMInt( Mem256, 168, 176)) #then subMInt( extractMInt( getParentValue(R2, RSMap), 168, 176), extractMInt( Mem256, 168, 176)) #else subMInt( extractMInt( Mem256, 168, 176), extractMInt( getParentValue(R2, RSMap), 168, 176)) #fi)), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( getParentValue(R2, RSMap), 176, 184), extractMInt( Mem256, 176, 184)) #then subMInt( extractMInt( getParentValue(R2, RSMap), 176, 184), extractMInt( Mem256, 176, 184)) #else subMInt( extractMInt( Mem256, 176, 184), extractMInt( getParentValue(R2, RSMap), 176, 184)) #fi)), concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( getParentValue(R2, RSMap), 184, 192), extractMInt( Mem256, 184, 192)) #then subMInt( extractMInt( getParentValue(R2, RSMap), 184, 192), extractMInt( Mem256, 184, 192)) #else subMInt( extractMInt( Mem256, 184, 192), extractMInt( getParentValue(R2, RSMap), 184, 192)) #fi)))))))))), concatenateMInt( mi(48, 0), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( getParentValue(R2, RSMap), 192, 200), extractMInt( Mem256, 192, 200)) #then subMInt( extractMInt( getParentValue(R2, RSMap), 192, 200), extractMInt( Mem256, 192, 200)) #else subMInt( extractMInt( Mem256, 192, 200), extractMInt( getParentValue(R2, RSMap), 192, 200)) #fi)), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( getParentValue(R2, RSMap), 200, 208), extractMInt( Mem256, 200, 208)) #then subMInt( extractMInt( getParentValue(R2, RSMap), 200, 208), extractMInt( Mem256, 200, 208)) #else subMInt( extractMInt( Mem256, 200, 208), extractMInt( getParentValue(R2, RSMap), 200, 208)) #fi)), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( getParentValue(R2, RSMap), 208, 216), extractMInt( Mem256, 208, 216)) #then subMInt( extractMInt( getParentValue(R2, RSMap), 208, 216), extractMInt( Mem256, 208, 216)) #else subMInt( extractMInt( Mem256, 208, 216), extractMInt( getParentValue(R2, RSMap), 208, 216)) #fi)), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( getParentValue(R2, RSMap), 216, 224), extractMInt( Mem256, 216, 224)) #then subMInt( extractMInt( getParentValue(R2, RSMap), 216, 224), extractMInt( Mem256, 216, 224)) #else subMInt( extractMInt( Mem256, 216, 224), extractMInt( getParentValue(R2, RSMap), 216, 224)) #fi)), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( getParentValue(R2, RSMap), 224, 232), extractMInt( Mem256, 224, 232)) #then subMInt( extractMInt( getParentValue(R2, RSMap), 224, 232), extractMInt( Mem256, 224, 232)) #else subMInt( extractMInt( Mem256, 224, 232), extractMInt( getParentValue(R2, RSMap), 224, 232)) #fi)), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( getParentValue(R2, RSMap), 232, 240), extractMInt( Mem256, 232, 240)) #then subMInt( extractMInt( getParentValue(R2, RSMap), 232, 240), extractMInt( Mem256, 232, 240)) #else subMInt( extractMInt( Mem256, 232, 240), extractMInt( getParentValue(R2, RSMap), 232, 240)) #fi)), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( getParentValue(R2, RSMap), 240, 248), extractMInt( Mem256, 240, 248)) #then subMInt( extractMInt( getParentValue(R2, RSMap), 240, 248), extractMInt( Mem256, 240, 248)) #else subMInt( extractMInt( Mem256, 240, 248), extractMInt( getParentValue(R2, RSMap), 240, 248)) #fi)), concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( getParentValue(R2, RSMap), 248, 256), extractMInt( Mem256, 248, 256)) #then subMInt( extractMInt( getParentValue(R2, RSMap), 248, 256), extractMInt( Mem256, 248, 256)) #else subMInt( extractMInt( Mem256, 248, 256), extractMInt( getParentValue(R2, RSMap), 248, 256)) #fi)))))))))))))
      )
    </regstate>
endmodule

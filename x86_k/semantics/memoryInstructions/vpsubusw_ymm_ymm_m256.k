// Autogenerated using stratification.
requires "x86-configuration.k"

module VPSUBUSW-YMM-YMM-M256
  imports X86-CONFIGURATION

  context execinstr(vpsubusw:Opcode HOLE:Mem, R2:Ymm, R3:Ymm,  .Operands) [result(MemOffset)]
  
  rule <k>
    execinstr (vpsubusw:Opcode memOffset( MemOff:MInt):MemOffset, R2:Ymm, R3:Ymm,  .Operands) =>
      loadFromMemory( MemOff, 256) ~>
      execinstr (vpsubusw memOffset( MemOff), R2:Ymm, R3:Ymm,  .Operands)
  ...</k>
    <regstate> RSMap:Map </regstate>
          
  rule <k>
    memLoadValue(Mem256:MInt):MemLoadValue ~> execinstr (vpsubusw:Opcode memOffset( MemOff:MInt):MemOffset, R2:Ymm, R3:Ymm,  .Operands) =>
      .
  ...</k>
    <regstate>
      RSMap:Map => updateMap(RSMap,
convToRegKeys(R3) |-> concatenateMInt( (#ifMInt sgtMInt( subMInt( concatenateMInt( mi(2, 0), extractMInt( getParentValue(R2, RSMap), 0, 16)), concatenateMInt( mi(2, 0), extractMInt( Mem256, 0, 16))), mi(18, 65535)) #then mi(16, 65535) #else (#ifMInt sltMInt( subMInt( concatenateMInt( mi(2, 0), extractMInt( getParentValue(R2, RSMap), 0, 16)), concatenateMInt( mi(2, 0), extractMInt( Mem256, 0, 16))), mi(18, 0)) #then mi(16, 0) #else extractMInt( subMInt( concatenateMInt( mi(2, 0), extractMInt( getParentValue(R2, RSMap), 0, 16)), concatenateMInt( mi(2, 0), extractMInt( Mem256, 0, 16))), 2, 18) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( subMInt( concatenateMInt( mi(2, 0), extractMInt( getParentValue(R2, RSMap), 16, 32)), concatenateMInt( mi(2, 0), extractMInt( Mem256, 16, 32))), mi(18, 65535)) #then mi(16, 65535) #else (#ifMInt sltMInt( subMInt( concatenateMInt( mi(2, 0), extractMInt( getParentValue(R2, RSMap), 16, 32)), concatenateMInt( mi(2, 0), extractMInt( Mem256, 16, 32))), mi(18, 0)) #then mi(16, 0) #else extractMInt( subMInt( concatenateMInt( mi(2, 0), extractMInt( getParentValue(R2, RSMap), 16, 32)), concatenateMInt( mi(2, 0), extractMInt( Mem256, 16, 32))), 2, 18) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( subMInt( concatenateMInt( mi(2, 0), extractMInt( getParentValue(R2, RSMap), 32, 48)), concatenateMInt( mi(2, 0), extractMInt( Mem256, 32, 48))), mi(18, 65535)) #then mi(16, 65535) #else (#ifMInt sltMInt( subMInt( concatenateMInt( mi(2, 0), extractMInt( getParentValue(R2, RSMap), 32, 48)), concatenateMInt( mi(2, 0), extractMInt( Mem256, 32, 48))), mi(18, 0)) #then mi(16, 0) #else extractMInt( subMInt( concatenateMInt( mi(2, 0), extractMInt( getParentValue(R2, RSMap), 32, 48)), concatenateMInt( mi(2, 0), extractMInt( Mem256, 32, 48))), 2, 18) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( subMInt( concatenateMInt( mi(2, 0), extractMInt( getParentValue(R2, RSMap), 48, 64)), concatenateMInt( mi(2, 0), extractMInt( Mem256, 48, 64))), mi(18, 65535)) #then mi(16, 65535) #else (#ifMInt sltMInt( subMInt( concatenateMInt( mi(2, 0), extractMInt( getParentValue(R2, RSMap), 48, 64)), concatenateMInt( mi(2, 0), extractMInt( Mem256, 48, 64))), mi(18, 0)) #then mi(16, 0) #else extractMInt( subMInt( concatenateMInt( mi(2, 0), extractMInt( getParentValue(R2, RSMap), 48, 64)), concatenateMInt( mi(2, 0), extractMInt( Mem256, 48, 64))), 2, 18) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( subMInt( concatenateMInt( mi(2, 0), extractMInt( getParentValue(R2, RSMap), 64, 80)), concatenateMInt( mi(2, 0), extractMInt( Mem256, 64, 80))), mi(18, 65535)) #then mi(16, 65535) #else (#ifMInt sltMInt( subMInt( concatenateMInt( mi(2, 0), extractMInt( getParentValue(R2, RSMap), 64, 80)), concatenateMInt( mi(2, 0), extractMInt( Mem256, 64, 80))), mi(18, 0)) #then mi(16, 0) #else extractMInt( subMInt( concatenateMInt( mi(2, 0), extractMInt( getParentValue(R2, RSMap), 64, 80)), concatenateMInt( mi(2, 0), extractMInt( Mem256, 64, 80))), 2, 18) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( subMInt( concatenateMInt( mi(2, 0), extractMInt( getParentValue(R2, RSMap), 80, 96)), concatenateMInt( mi(2, 0), extractMInt( Mem256, 80, 96))), mi(18, 65535)) #then mi(16, 65535) #else (#ifMInt sltMInt( subMInt( concatenateMInt( mi(2, 0), extractMInt( getParentValue(R2, RSMap), 80, 96)), concatenateMInt( mi(2, 0), extractMInt( Mem256, 80, 96))), mi(18, 0)) #then mi(16, 0) #else extractMInt( subMInt( concatenateMInt( mi(2, 0), extractMInt( getParentValue(R2, RSMap), 80, 96)), concatenateMInt( mi(2, 0), extractMInt( Mem256, 80, 96))), 2, 18) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( subMInt( concatenateMInt( mi(2, 0), extractMInt( getParentValue(R2, RSMap), 96, 112)), concatenateMInt( mi(2, 0), extractMInt( Mem256, 96, 112))), mi(18, 65535)) #then mi(16, 65535) #else (#ifMInt sltMInt( subMInt( concatenateMInt( mi(2, 0), extractMInt( getParentValue(R2, RSMap), 96, 112)), concatenateMInt( mi(2, 0), extractMInt( Mem256, 96, 112))), mi(18, 0)) #then mi(16, 0) #else extractMInt( subMInt( concatenateMInt( mi(2, 0), extractMInt( getParentValue(R2, RSMap), 96, 112)), concatenateMInt( mi(2, 0), extractMInt( Mem256, 96, 112))), 2, 18) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( subMInt( concatenateMInt( mi(2, 0), extractMInt( getParentValue(R2, RSMap), 112, 128)), concatenateMInt( mi(2, 0), extractMInt( Mem256, 112, 128))), mi(18, 65535)) #then mi(16, 65535) #else (#ifMInt sltMInt( subMInt( concatenateMInt( mi(2, 0), extractMInt( getParentValue(R2, RSMap), 112, 128)), concatenateMInt( mi(2, 0), extractMInt( Mem256, 112, 128))), mi(18, 0)) #then mi(16, 0) #else extractMInt( subMInt( concatenateMInt( mi(2, 0), extractMInt( getParentValue(R2, RSMap), 112, 128)), concatenateMInt( mi(2, 0), extractMInt( Mem256, 112, 128))), 2, 18) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( subMInt( concatenateMInt( mi(2, 0), extractMInt( getParentValue(R2, RSMap), 128, 144)), concatenateMInt( mi(2, 0), extractMInt( Mem256, 128, 144))), mi(18, 65535)) #then mi(16, 65535) #else (#ifMInt sltMInt( subMInt( concatenateMInt( mi(2, 0), extractMInt( getParentValue(R2, RSMap), 128, 144)), concatenateMInt( mi(2, 0), extractMInt( Mem256, 128, 144))), mi(18, 0)) #then mi(16, 0) #else extractMInt( subMInt( concatenateMInt( mi(2, 0), extractMInt( getParentValue(R2, RSMap), 128, 144)), concatenateMInt( mi(2, 0), extractMInt( Mem256, 128, 144))), 2, 18) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( subMInt( concatenateMInt( mi(2, 0), extractMInt( getParentValue(R2, RSMap), 144, 160)), concatenateMInt( mi(2, 0), extractMInt( Mem256, 144, 160))), mi(18, 65535)) #then mi(16, 65535) #else (#ifMInt sltMInt( subMInt( concatenateMInt( mi(2, 0), extractMInt( getParentValue(R2, RSMap), 144, 160)), concatenateMInt( mi(2, 0), extractMInt( Mem256, 144, 160))), mi(18, 0)) #then mi(16, 0) #else extractMInt( subMInt( concatenateMInt( mi(2, 0), extractMInt( getParentValue(R2, RSMap), 144, 160)), concatenateMInt( mi(2, 0), extractMInt( Mem256, 144, 160))), 2, 18) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( subMInt( concatenateMInt( mi(2, 0), extractMInt( getParentValue(R2, RSMap), 160, 176)), concatenateMInt( mi(2, 0), extractMInt( Mem256, 160, 176))), mi(18, 65535)) #then mi(16, 65535) #else (#ifMInt sltMInt( subMInt( concatenateMInt( mi(2, 0), extractMInt( getParentValue(R2, RSMap), 160, 176)), concatenateMInt( mi(2, 0), extractMInt( Mem256, 160, 176))), mi(18, 0)) #then mi(16, 0) #else extractMInt( subMInt( concatenateMInt( mi(2, 0), extractMInt( getParentValue(R2, RSMap), 160, 176)), concatenateMInt( mi(2, 0), extractMInt( Mem256, 160, 176))), 2, 18) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( subMInt( concatenateMInt( mi(2, 0), extractMInt( getParentValue(R2, RSMap), 176, 192)), concatenateMInt( mi(2, 0), extractMInt( Mem256, 176, 192))), mi(18, 65535)) #then mi(16, 65535) #else (#ifMInt sltMInt( subMInt( concatenateMInt( mi(2, 0), extractMInt( getParentValue(R2, RSMap), 176, 192)), concatenateMInt( mi(2, 0), extractMInt( Mem256, 176, 192))), mi(18, 0)) #then mi(16, 0) #else extractMInt( subMInt( concatenateMInt( mi(2, 0), extractMInt( getParentValue(R2, RSMap), 176, 192)), concatenateMInt( mi(2, 0), extractMInt( Mem256, 176, 192))), 2, 18) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( subMInt( concatenateMInt( mi(2, 0), extractMInt( getParentValue(R2, RSMap), 192, 208)), concatenateMInt( mi(2, 0), extractMInt( Mem256, 192, 208))), mi(18, 65535)) #then mi(16, 65535) #else (#ifMInt sltMInt( subMInt( concatenateMInt( mi(2, 0), extractMInt( getParentValue(R2, RSMap), 192, 208)), concatenateMInt( mi(2, 0), extractMInt( Mem256, 192, 208))), mi(18, 0)) #then mi(16, 0) #else extractMInt( subMInt( concatenateMInt( mi(2, 0), extractMInt( getParentValue(R2, RSMap), 192, 208)), concatenateMInt( mi(2, 0), extractMInt( Mem256, 192, 208))), 2, 18) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( subMInt( concatenateMInt( mi(2, 0), extractMInt( getParentValue(R2, RSMap), 208, 224)), concatenateMInt( mi(2, 0), extractMInt( Mem256, 208, 224))), mi(18, 65535)) #then mi(16, 65535) #else (#ifMInt sltMInt( subMInt( concatenateMInt( mi(2, 0), extractMInt( getParentValue(R2, RSMap), 208, 224)), concatenateMInt( mi(2, 0), extractMInt( Mem256, 208, 224))), mi(18, 0)) #then mi(16, 0) #else extractMInt( subMInt( concatenateMInt( mi(2, 0), extractMInt( getParentValue(R2, RSMap), 208, 224)), concatenateMInt( mi(2, 0), extractMInt( Mem256, 208, 224))), 2, 18) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( subMInt( concatenateMInt( mi(2, 0), extractMInt( getParentValue(R2, RSMap), 224, 240)), concatenateMInt( mi(2, 0), extractMInt( Mem256, 224, 240))), mi(18, 65535)) #then mi(16, 65535) #else (#ifMInt sltMInt( subMInt( concatenateMInt( mi(2, 0), extractMInt( getParentValue(R2, RSMap), 224, 240)), concatenateMInt( mi(2, 0), extractMInt( Mem256, 224, 240))), mi(18, 0)) #then mi(16, 0) #else extractMInt( subMInt( concatenateMInt( mi(2, 0), extractMInt( getParentValue(R2, RSMap), 224, 240)), concatenateMInt( mi(2, 0), extractMInt( Mem256, 224, 240))), 2, 18) #fi) #fi), (#ifMInt sgtMInt( subMInt( concatenateMInt( mi(2, 0), extractMInt( getParentValue(R2, RSMap), 240, 256)), concatenateMInt( mi(2, 0), extractMInt( Mem256, 240, 256))), mi(18, 65535)) #then mi(16, 65535) #else (#ifMInt sltMInt( subMInt( concatenateMInt( mi(2, 0), extractMInt( getParentValue(R2, RSMap), 240, 256)), concatenateMInt( mi(2, 0), extractMInt( Mem256, 240, 256))), mi(18, 0)) #then mi(16, 0) #else extractMInt( subMInt( concatenateMInt( mi(2, 0), extractMInt( getParentValue(R2, RSMap), 240, 256)), concatenateMInt( mi(2, 0), extractMInt( Mem256, 240, 256))), 2, 18) #fi) #fi))))))))))))))))
      )
    </regstate>
endmodule

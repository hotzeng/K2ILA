// Autogenerated using stratification.
requires "x86-configuration.k"

module VPUNPCKLWD-YMM-YMM-M256
  imports X86-CONFIGURATION

  context execinstr(vpunpcklwd:Opcode HOLE:Mem, R2:Ymm, R3:Ymm,  .Operands) [result(MemOffset)]
  
  rule <k>
    execinstr (vpunpcklwd:Opcode memOffset( MemOff:MInt):MemOffset, R2:Ymm, R3:Ymm,  .Operands) =>
      loadFromMemory( MemOff, 256) ~>
      execinstr (vpunpcklwd memOffset( MemOff), R2:Ymm, R3:Ymm,  .Operands)
  ...</k>
    <regstate> RSMap:Map </regstate>
          
  rule <k>
    memLoadValue(Mem256:MInt):MemLoadValue ~> execinstr (vpunpcklwd:Opcode memOffset( MemOff:MInt):MemOffset, R2:Ymm, R3:Ymm,  .Operands) =>
      .
  ...</k>
    <regstate>
      RSMap:Map => updateMap(RSMap,
convToRegKeys(R3) |-> concatenateMInt( concatenateMInt( extractMInt( Mem256, 64, 80), extractMInt( getParentValue(R2, RSMap), 64, 80)), concatenateMInt( concatenateMInt( extractMInt( Mem256, 80, 96), extractMInt( getParentValue(R2, RSMap), 80, 96)), concatenateMInt( concatenateMInt( extractMInt( Mem256, 96, 112), extractMInt( getParentValue(R2, RSMap), 96, 112)), concatenateMInt( concatenateMInt( extractMInt( Mem256, 112, 128), extractMInt( getParentValue(R2, RSMap), 112, 128)), concatenateMInt( concatenateMInt( extractMInt( Mem256, 192, 208), extractMInt( getParentValue(R2, RSMap), 192, 208)), concatenateMInt( concatenateMInt( extractMInt( Mem256, 208, 224), extractMInt( getParentValue(R2, RSMap), 208, 224)), concatenateMInt( concatenateMInt( extractMInt( Mem256, 224, 240), extractMInt( getParentValue(R2, RSMap), 224, 240)), concatenateMInt( extractMInt( Mem256, 240, 256), extractMInt( getParentValue(R2, RSMap), 240, 256)))))))))
      )
    </regstate>
endmodule

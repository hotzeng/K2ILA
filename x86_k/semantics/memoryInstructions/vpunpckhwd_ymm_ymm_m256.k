// Autogenerated using stratification.
requires "x86-configuration.k"

module VPUNPCKHWD-YMM-YMM-M256
  imports X86-CONFIGURATION

  context execinstr(vpunpckhwd:Opcode HOLE:Mem, R2:Ymm, R3:Ymm,  .Operands) [result(MemOffset)]
  
  rule <k>
    execinstr (vpunpckhwd:Opcode memOffset( MemOff:MInt):MemOffset, R2:Ymm, R3:Ymm,  .Operands) =>
      loadFromMemory( MemOff, 256) ~>
      execinstr (vpunpckhwd memOffset( MemOff), R2:Ymm, R3:Ymm,  .Operands)
  ...</k>
    <regstate> RSMap:Map </regstate>
          
  rule <k>
    memLoadValue(Mem256:MInt):MemLoadValue ~> execinstr (vpunpckhwd:Opcode memOffset( MemOff:MInt):MemOffset, R2:Ymm, R3:Ymm,  .Operands) =>
      .
  ...</k>
    <regstate>
      RSMap:Map => updateMap(RSMap,
convToRegKeys(R3) |-> concatenateMInt( concatenateMInt( extractMInt( Mem256, 0, 16), extractMInt( getParentValue(R2, RSMap), 0, 16)), concatenateMInt( concatenateMInt( extractMInt( Mem256, 16, 32), extractMInt( getParentValue(R2, RSMap), 16, 32)), concatenateMInt( concatenateMInt( extractMInt( Mem256, 32, 48), extractMInt( getParentValue(R2, RSMap), 32, 48)), concatenateMInt( concatenateMInt( extractMInt( Mem256, 48, 64), extractMInt( getParentValue(R2, RSMap), 48, 64)), concatenateMInt( concatenateMInt( extractMInt( Mem256, 128, 144), extractMInt( getParentValue(R2, RSMap), 128, 144)), concatenateMInt( concatenateMInt( extractMInt( Mem256, 144, 160), extractMInt( getParentValue(R2, RSMap), 144, 160)), concatenateMInt( concatenateMInt( extractMInt( Mem256, 160, 176), extractMInt( getParentValue(R2, RSMap), 160, 176)), concatenateMInt( extractMInt( Mem256, 176, 192), extractMInt( getParentValue(R2, RSMap), 176, 192)))))))))
      )
    </regstate>
endmodule

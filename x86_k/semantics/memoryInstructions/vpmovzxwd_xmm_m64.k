// Autogenerated using stratification.
requires "x86-configuration.k"

module VPMOVZXWD-XMM-M64
  imports X86-CONFIGURATION

  context execinstr(vpmovzxwd:Opcode HOLE:Mem, R2:Xmm,  .Operands) [result(MemOffset)]
  
  rule <k>
    execinstr (vpmovzxwd:Opcode memOffset( MemOff:MInt):MemOffset, R2:Xmm,  .Operands) =>
      loadFromMemory( MemOff, 64) ~>
      execinstr (vpmovzxwd memOffset( MemOff), R2:Xmm,  .Operands)
  ...</k>
    <regstate> RSMap:Map </regstate>
          
  rule <k>
    memLoadValue(Mem64:MInt):MemLoadValue ~> execinstr (vpmovzxwd:Opcode memOffset( MemOff:MInt):MemOffset, R2:Xmm,  .Operands) =>
      .
  ...</k>
    <regstate>
      RSMap:Map => updateMap(RSMap,
convToRegKeys(R2) |-> concatenateMInt( mi(128, 0), concatenateMInt( concatenateMInt( mi(16, 0), extractMInt( Mem64, 0, 16)), concatenateMInt( concatenateMInt( mi(16, 0), extractMInt( Mem64, 16, 32)), concatenateMInt( concatenateMInt( mi(16, 0), extractMInt( Mem64, 32, 48)), concatenateMInt( mi(16, 0), extractMInt( Mem64, 48, 64))))))
      )
    </regstate>
endmodule

// Autogenerated using stratification.
requires "x86-configuration.k"

module VPSUBSW-XMM-XMM-M128
  imports X86-CONFIGURATION

  context execinstr(vpsubsw:Opcode HOLE:Mem, R2:Xmm, R3:Xmm,  .Operands) [result(MemOffset)]
  
  rule <k>
    execinstr (vpsubsw:Opcode memOffset( MemOff:MInt):MemOffset, R2:Xmm, R3:Xmm,  .Operands) =>
      loadFromMemory( MemOff, 128) ~>
      execinstr (vpsubsw memOffset( MemOff), R2:Xmm, R3:Xmm,  .Operands)
  ...</k>
    <regstate> RSMap:Map </regstate>
          
  rule <k>
    memLoadValue(Mem128:MInt):MemLoadValue ~> execinstr (vpsubsw:Opcode memOffset( MemOff:MInt):MemOffset, R2:Xmm, R3:Xmm,  .Operands) =>
      .
  ...</k>
    <regstate>
      RSMap:Map => updateMap(RSMap,
convToRegKeys(R3) |-> concatenateMInt( mi(128, 0), concatenateMInt( (#ifMInt sgtMInt( subMInt( mi(18, svalueMInt(extractMInt( getParentValue(R2, RSMap), 128, 144))), mi(18, svalueMInt(extractMInt( Mem128, 0, 16)))), mi(18, 32767)) #then mi(16, 32767) #else (#ifMInt sltMInt( subMInt( mi(18, svalueMInt(extractMInt( getParentValue(R2, RSMap), 128, 144))), mi(18, svalueMInt(extractMInt( Mem128, 0, 16)))), mi(18, 18446744073709518848)) #then mi(16, 32768) #else extractMInt( subMInt( mi(18, svalueMInt(extractMInt( getParentValue(R2, RSMap), 128, 144))), mi(18, svalueMInt(extractMInt( Mem128, 0, 16)))), 2, 18) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( subMInt( mi(18, svalueMInt(extractMInt( getParentValue(R2, RSMap), 144, 160))), mi(18, svalueMInt(extractMInt( Mem128, 16, 32)))), mi(18, 32767)) #then mi(16, 32767) #else (#ifMInt sltMInt( subMInt( mi(18, svalueMInt(extractMInt( getParentValue(R2, RSMap), 144, 160))), mi(18, svalueMInt(extractMInt( Mem128, 16, 32)))), mi(18, 18446744073709518848)) #then mi(16, 32768) #else extractMInt( subMInt( mi(18, svalueMInt(extractMInt( getParentValue(R2, RSMap), 144, 160))), mi(18, svalueMInt(extractMInt( Mem128, 16, 32)))), 2, 18) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( subMInt( mi(18, svalueMInt(extractMInt( getParentValue(R2, RSMap), 160, 176))), mi(18, svalueMInt(extractMInt( Mem128, 32, 48)))), mi(18, 32767)) #then mi(16, 32767) #else (#ifMInt sltMInt( subMInt( mi(18, svalueMInt(extractMInt( getParentValue(R2, RSMap), 160, 176))), mi(18, svalueMInt(extractMInt( Mem128, 32, 48)))), mi(18, 18446744073709518848)) #then mi(16, 32768) #else extractMInt( subMInt( mi(18, svalueMInt(extractMInt( getParentValue(R2, RSMap), 160, 176))), mi(18, svalueMInt(extractMInt( Mem128, 32, 48)))), 2, 18) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( subMInt( mi(18, svalueMInt(extractMInt( getParentValue(R2, RSMap), 176, 192))), mi(18, svalueMInt(extractMInt( Mem128, 48, 64)))), mi(18, 32767)) #then mi(16, 32767) #else (#ifMInt sltMInt( subMInt( mi(18, svalueMInt(extractMInt( getParentValue(R2, RSMap), 176, 192))), mi(18, svalueMInt(extractMInt( Mem128, 48, 64)))), mi(18, 18446744073709518848)) #then mi(16, 32768) #else extractMInt( subMInt( mi(18, svalueMInt(extractMInt( getParentValue(R2, RSMap), 176, 192))), mi(18, svalueMInt(extractMInt( Mem128, 48, 64)))), 2, 18) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( subMInt( mi(18, svalueMInt(extractMInt( getParentValue(R2, RSMap), 192, 208))), mi(18, svalueMInt(extractMInt( Mem128, 64, 80)))), mi(18, 32767)) #then mi(16, 32767) #else (#ifMInt sltMInt( subMInt( mi(18, svalueMInt(extractMInt( getParentValue(R2, RSMap), 192, 208))), mi(18, svalueMInt(extractMInt( Mem128, 64, 80)))), mi(18, 18446744073709518848)) #then mi(16, 32768) #else extractMInt( subMInt( mi(18, svalueMInt(extractMInt( getParentValue(R2, RSMap), 192, 208))), mi(18, svalueMInt(extractMInt( Mem128, 64, 80)))), 2, 18) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( subMInt( mi(18, svalueMInt(extractMInt( getParentValue(R2, RSMap), 208, 224))), mi(18, svalueMInt(extractMInt( Mem128, 80, 96)))), mi(18, 32767)) #then mi(16, 32767) #else (#ifMInt sltMInt( subMInt( mi(18, svalueMInt(extractMInt( getParentValue(R2, RSMap), 208, 224))), mi(18, svalueMInt(extractMInt( Mem128, 80, 96)))), mi(18, 18446744073709518848)) #then mi(16, 32768) #else extractMInt( subMInt( mi(18, svalueMInt(extractMInt( getParentValue(R2, RSMap), 208, 224))), mi(18, svalueMInt(extractMInt( Mem128, 80, 96)))), 2, 18) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( subMInt( mi(18, svalueMInt(extractMInt( getParentValue(R2, RSMap), 224, 240))), mi(18, svalueMInt(extractMInt( Mem128, 96, 112)))), mi(18, 32767)) #then mi(16, 32767) #else (#ifMInt sltMInt( subMInt( mi(18, svalueMInt(extractMInt( getParentValue(R2, RSMap), 224, 240))), mi(18, svalueMInt(extractMInt( Mem128, 96, 112)))), mi(18, 18446744073709518848)) #then mi(16, 32768) #else extractMInt( subMInt( mi(18, svalueMInt(extractMInt( getParentValue(R2, RSMap), 224, 240))), mi(18, svalueMInt(extractMInt( Mem128, 96, 112)))), 2, 18) #fi) #fi), (#ifMInt sgtMInt( subMInt( mi(18, svalueMInt(extractMInt( getParentValue(R2, RSMap), 240, 256))), mi(18, svalueMInt(extractMInt( Mem128, 112, 128)))), mi(18, 32767)) #then mi(16, 32767) #else (#ifMInt sltMInt( subMInt( mi(18, svalueMInt(extractMInt( getParentValue(R2, RSMap), 240, 256))), mi(18, svalueMInt(extractMInt( Mem128, 112, 128)))), mi(18, 18446744073709518848)) #then mi(16, 32768) #else extractMInt( subMInt( mi(18, svalueMInt(extractMInt( getParentValue(R2, RSMap), 240, 256))), mi(18, svalueMInt(extractMInt( Mem128, 112, 128)))), 2, 18) #fi) #fi)))))))))
      )
    </regstate>
endmodule

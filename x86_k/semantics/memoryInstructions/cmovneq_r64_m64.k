// Autogenerated using stratification.
requires "x86-configuration.k"

module CMOVNEQ-R64-M64
  imports X86-CONFIGURATION

  context execinstr(cmovneq:Opcode HOLE:Mem, R2:R64,  .Operands) [result(MemOffset)]
  
  rule <k>
    execinstr (cmovneq:Opcode memOffset( MemOff:MInt):MemOffset, R2:R64,  .Operands) =>
      loadFromMemory( MemOff, 64) ~>
      execinstr (cmovneq memOffset( MemOff), R2,  .Operands)
  ...</k>
    <regstate> RSMap:Map </regstate>
          
  rule <k>
    memLoadValue(Mem64:MInt):MemLoadValue ~> execinstr (cmovneq:Opcode memOffset( MemOff:MInt):MemOffset, R2:R64,  .Operands) =>
      .
  ...</k>
    <regstate>
      RSMap:Map => updateMap(RSMap,
convToRegKeys(R2) |-> (#ifMInt (notBool eqMInt(getFlag("ZF", RSMap), mi(1,1))) #then Mem64 #else getParentValue(R2, RSMap) #fi)
      )
    </regstate>
endmodule

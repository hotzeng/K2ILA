// Autogenerated using stratification.
requires "x86-configuration.k"

module VPUNPCKLDQ-YMM-YMM-M256
  imports X86-CONFIGURATION

  context execinstr(vpunpckldq:Opcode HOLE:Mem, R2:Ymm, R3:Ymm,  .Operands) [result(MemOffset)]
  
  rule <k>
    execinstr (vpunpckldq:Opcode memOffset( MemOff:MInt):MemOffset, R2:Ymm, R3:Ymm,  .Operands) =>
      loadFromMemory( MemOff, 256) ~>
      execinstr (vpunpckldq memOffset( MemOff), R2:Ymm, R3:Ymm,  .Operands)
  ...</k>
    <regstate> RSMap:Map </regstate>
          
  rule <k>
    memLoadValue(Mem256:MInt):MemLoadValue ~> execinstr (vpunpckldq:Opcode memOffset( MemOff:MInt):MemOffset, R2:Ymm, R3:Ymm,  .Operands) =>
      .
  ...</k>
    <regstate>
      RSMap:Map => updateMap(RSMap,
convToRegKeys(R3) |-> concatenateMInt( concatenateMInt( extractMInt( Mem256, 64, 96), extractMInt( getParentValue(R2, RSMap), 64, 96)), concatenateMInt( concatenateMInt( extractMInt( Mem256, 96, 128), extractMInt( getParentValue(R2, RSMap), 96, 128)), concatenateMInt( concatenateMInt( extractMInt( Mem256, 192, 224), extractMInt( getParentValue(R2, RSMap), 192, 224)), concatenateMInt( extractMInt( Mem256, 224, 256), extractMInt( getParentValue(R2, RSMap), 224, 256)))))
      )
    </regstate>
endmodule

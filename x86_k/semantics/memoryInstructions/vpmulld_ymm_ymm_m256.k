// Autogenerated using stratification.
requires "x86-configuration.k"

module VPMULLD-YMM-YMM-M256
  imports X86-CONFIGURATION

  context execinstr(vpmulld:Opcode HOLE:Mem, R2:Ymm, R3:Ymm,  .Operands) [result(MemOffset)]
  
  rule <k>
    execinstr (vpmulld:Opcode memOffset( MemOff:MInt):MemOffset, R2:Ymm, R3:Ymm,  .Operands) =>
      loadFromMemory( MemOff, 256) ~>
      execinstr (vpmulld memOffset( MemOff), R2:Ymm, R3:Ymm,  .Operands)
  ...</k>
    <regstate> RSMap:Map </regstate>
          
  rule <k>
    memLoadValue(Mem256:MInt):MemLoadValue ~> execinstr (vpmulld:Opcode memOffset( MemOff:MInt):MemOffset, R2:Ymm, R3:Ymm,  .Operands) =>
      .
  ...</k>
    <regstate>
      RSMap:Map => updateMap(RSMap,
convToRegKeys(R3) |-> concatenateMInt( extractMInt( mulMInt( mi(64, svalueMInt(extractMInt( getParentValue(R2, RSMap), 0, 32))), mi(64, svalueMInt(extractMInt( Mem256, 0, 32)))), 32, 64), concatenateMInt( extractMInt( mulMInt( mi(64, svalueMInt(extractMInt( getParentValue(R2, RSMap), 32, 64))), mi(64, svalueMInt(extractMInt( Mem256, 32, 64)))), 32, 64), concatenateMInt( extractMInt( mulMInt( mi(64, svalueMInt(extractMInt( getParentValue(R2, RSMap), 64, 96))), mi(64, svalueMInt(extractMInt( Mem256, 64, 96)))), 32, 64), concatenateMInt( extractMInt( mulMInt( mi(64, svalueMInt(extractMInt( getParentValue(R2, RSMap), 96, 128))), mi(64, svalueMInt(extractMInt( Mem256, 96, 128)))), 32, 64), concatenateMInt( extractMInt( mulMInt( mi(64, svalueMInt(extractMInt( getParentValue(R2, RSMap), 128, 160))), mi(64, svalueMInt(extractMInt( Mem256, 128, 160)))), 32, 64), concatenateMInt( extractMInt( mulMInt( mi(64, svalueMInt(extractMInt( getParentValue(R2, RSMap), 160, 192))), mi(64, svalueMInt(extractMInt( Mem256, 160, 192)))), 32, 64), concatenateMInt( extractMInt( mulMInt( mi(64, svalueMInt(extractMInt( getParentValue(R2, RSMap), 192, 224))), mi(64, svalueMInt(extractMInt( Mem256, 192, 224)))), 32, 64), extractMInt( mulMInt( mi(64, svalueMInt(extractMInt( getParentValue(R2, RSMap), 224, 256))), mi(64, svalueMInt(extractMInt( Mem256, 224, 256)))), 32, 64))))))))
      )
    </regstate>
endmodule

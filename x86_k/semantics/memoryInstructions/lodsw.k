// Autogenerated using stratification.
requires "x86-configuration.k"

module LODSW
  imports X86-CONFIGURATION

  rule <k>
    execinstr (lodsw  .Operands) =>
      loadFromMemory( getRegisterValue(%rsi, RSMap), 16) ~>
      execinstr (lodsw  .Operands)
  ...</k>
    <regstate> RSMap:Map </regstate>

  rule <k>
    memLoadValue(Mem16:MInt):MemLoadValue ~> execinstr (lodsw .Operands) => 
                            setRegisterValue(Mem16, %ax)
  ...</k>
    <regstate>
    RSMap:Map => updateMap(RSMap,
      convToRegKeys(%rsi) |-> addMInt(getRegisterValue(%rsi, RSMap), mi( 64, 2))
    )
    </regstate>
      requires eqMInt({RSMap["DF"]}:>MInt, mi(1, 0))

  rule <k>
    memLoadValue(Mem16:MInt):MemLoadValue ~> execinstr (lodsw .Operands) => 
                            setRegisterValue(Mem16, %ax)
  ...</k>
    <regstate>
    RSMap:Map => updateMap(RSMap,
      convToRegKeys(%rsi) |-> subMInt(getRegisterValue(%rsi, RSMap), mi( 64, 2))
    )
    </regstate>
      requires eqMInt({RSMap["DF"]}:>MInt, mi(1, 1))
endmodule

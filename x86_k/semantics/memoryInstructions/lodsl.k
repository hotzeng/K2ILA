// Autogenerated using stratification.
requires "x86-configuration.k"

module LODSL
  imports X86-CONFIGURATION

  rule <k>
    execinstr (lodsl  .Operands) =>
      loadFromMemory( getRegisterValue(%rsi, RSMap), 32) ~>
      execinstr (lodsl  .Operands)
  ...</k>
    <regstate> RSMap:Map </regstate>

  rule <k>
    memLoadValue(Mem32:MInt):MemLoadValue ~> execinstr (lodsl .Operands) => 
                            setParentValue(concatenateMInt(mi(32, 0), Mem32), %rax)
  ...</k>
    <regstate>
    RSMap:Map => updateMap(RSMap,
      convToRegKeys(%rsi) |-> addMInt(getRegisterValue(%rsi, RSMap), mi( 64, 4))
    )
    </regstate>
      requires eqMInt({RSMap["DF"]}:>MInt, mi(1, 0))

  rule <k>
    memLoadValue(Mem32:MInt):MemLoadValue ~> execinstr (lodsl .Operands) => 
                            setParentValue(concatenateMInt(mi(32, 0), Mem32), %rax)
  ...</k>
    <regstate>
    RSMap:Map => updateMap(RSMap,
      convToRegKeys(%rsi) |-> subMInt(getRegisterValue(%rsi, RSMap), mi( 64, 4))
    )
    </regstate>
      requires eqMInt({RSMap["DF"]}:>MInt, mi(1, 1))
endmodule

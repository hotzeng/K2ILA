// Autogenerated using stratification.
requires "x86-configuration.k"

module VPACKSSWB-XMM-XMM-M128
  imports X86-CONFIGURATION

  context execinstr(vpacksswb:Opcode HOLE:Mem, R2:Xmm, R3:Xmm,  .Operands) [result(MemOffset)]
  
  rule <k>
    execinstr (vpacksswb:Opcode memOffset( MemOff:MInt):MemOffset, R2:Xmm, R3:Xmm,  .Operands) =>
      loadFromMemory( MemOff, 128) ~>
      execinstr (vpacksswb memOffset( MemOff), R2:Xmm, R3:Xmm,  .Operands)
  ...</k>
    <regstate> RSMap:Map </regstate>
          
  rule <k>
    memLoadValue(Mem128:MInt):MemLoadValue ~> execinstr (vpacksswb:Opcode memOffset( MemOff:MInt):MemOffset, R2:Xmm, R3:Xmm,  .Operands) =>
      .
  ...</k>
    <regstate>
      RSMap:Map => updateMap(RSMap,
convToRegKeys(R3) |-> concatenateMInt( mi(128, 0), concatenateMInt( (#ifMInt sgtMInt( extractMInt( Mem128, 0, 16), mi(16, 127)) #then mi(8, 127) #else (#ifMInt sltMInt( extractMInt( Mem128, 0, 16), mi(16, 18446744073709551488)) #then mi(8, 18446744073709551488) #else extractMInt( Mem128, 8, 16) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( Mem128, 16, 32), mi(16, 127)) #then mi(8, 127) #else (#ifMInt sltMInt( extractMInt( Mem128, 16, 32), mi(16, 18446744073709551488)) #then mi(8, 18446744073709551488) #else extractMInt( Mem128, 24, 32) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( Mem128, 32, 48), mi(16, 127)) #then mi(8, 127) #else (#ifMInt sltMInt( extractMInt( Mem128, 32, 48), mi(16, 18446744073709551488)) #then mi(8, 18446744073709551488) #else extractMInt( Mem128, 40, 48) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( Mem128, 48, 64), mi(16, 127)) #then mi(8, 127) #else (#ifMInt sltMInt( extractMInt( Mem128, 48, 64), mi(16, 18446744073709551488)) #then mi(8, 18446744073709551488) #else extractMInt( Mem128, 56, 64) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( Mem128, 64, 80), mi(16, 127)) #then mi(8, 127) #else (#ifMInt sltMInt( extractMInt( Mem128, 64, 80), mi(16, 18446744073709551488)) #then mi(8, 18446744073709551488) #else extractMInt( Mem128, 72, 80) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( Mem128, 80, 96), mi(16, 127)) #then mi(8, 127) #else (#ifMInt sltMInt( extractMInt( Mem128, 80, 96), mi(16, 18446744073709551488)) #then mi(8, 18446744073709551488) #else extractMInt( Mem128, 88, 96) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( Mem128, 96, 112), mi(16, 127)) #then mi(8, 127) #else (#ifMInt sltMInt( extractMInt( Mem128, 96, 112), mi(16, 18446744073709551488)) #then mi(8, 18446744073709551488) #else extractMInt( Mem128, 104, 112) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( Mem128, 112, 128), mi(16, 127)) #then mi(8, 127) #else (#ifMInt sltMInt( extractMInt( Mem128, 112, 128), mi(16, 18446744073709551488)) #then mi(8, 18446744073709551488) #else extractMInt( Mem128, 120, 128) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R2, RSMap), 128, 144), mi(16, 127)) #then mi(8, 127) #else (#ifMInt sltMInt( extractMInt( getParentValue(R2, RSMap), 128, 144), mi(16, 18446744073709551488)) #then mi(8, 18446744073709551488) #else extractMInt( getParentValue(R2, RSMap), 136, 144) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R2, RSMap), 144, 160), mi(16, 127)) #then mi(8, 127) #else (#ifMInt sltMInt( extractMInt( getParentValue(R2, RSMap), 144, 160), mi(16, 18446744073709551488)) #then mi(8, 18446744073709551488) #else extractMInt( getParentValue(R2, RSMap), 152, 160) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R2, RSMap), 160, 176), mi(16, 127)) #then mi(8, 127) #else (#ifMInt sltMInt( extractMInt( getParentValue(R2, RSMap), 160, 176), mi(16, 18446744073709551488)) #then mi(8, 18446744073709551488) #else extractMInt( getParentValue(R2, RSMap), 168, 176) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R2, RSMap), 176, 192), mi(16, 127)) #then mi(8, 127) #else (#ifMInt sltMInt( extractMInt( getParentValue(R2, RSMap), 176, 192), mi(16, 18446744073709551488)) #then mi(8, 18446744073709551488) #else extractMInt( getParentValue(R2, RSMap), 184, 192) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R2, RSMap), 192, 208), mi(16, 127)) #then mi(8, 127) #else (#ifMInt sltMInt( extractMInt( getParentValue(R2, RSMap), 192, 208), mi(16, 18446744073709551488)) #then mi(8, 18446744073709551488) #else extractMInt( getParentValue(R2, RSMap), 200, 208) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R2, RSMap), 208, 224), mi(16, 127)) #then mi(8, 127) #else (#ifMInt sltMInt( extractMInt( getParentValue(R2, RSMap), 208, 224), mi(16, 18446744073709551488)) #then mi(8, 18446744073709551488) #else extractMInt( getParentValue(R2, RSMap), 216, 224) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R2, RSMap), 224, 240), mi(16, 127)) #then mi(8, 127) #else (#ifMInt sltMInt( extractMInt( getParentValue(R2, RSMap), 224, 240), mi(16, 18446744073709551488)) #then mi(8, 18446744073709551488) #else extractMInt( getParentValue(R2, RSMap), 232, 240) #fi) #fi), (#ifMInt sgtMInt( extractMInt( getParentValue(R2, RSMap), 240, 256), mi(16, 127)) #then mi(8, 127) #else (#ifMInt sltMInt( extractMInt( getParentValue(R2, RSMap), 240, 256), mi(16, 18446744073709551488)) #then mi(8, 18446744073709551488) #else extractMInt( getParentValue(R2, RSMap), 248, 256) #fi) #fi)))))))))))))))))
      )
    </regstate>
endmodule

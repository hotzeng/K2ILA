// Autogenerated using stratification.
requires "x86-configuration.k"

module MOVBEQ-R64-M64
  imports X86-CONFIGURATION

  rule <k>
    execinstr (movbe:Opcode M:Mem, R2:R64,  .Operands) => execinstr (movbeq:Opcode M:Mem, R2:R64,  .Operands) 
  ...</k>
  context execinstr(movbeq:Opcode HOLE:Mem, R2:R64,  .Operands) [result(MemOffset)]
  
  rule <k>
    execinstr (movbeq:Opcode memOffset( MemOff:MInt):MemOffset, R2:R64,  .Operands) =>
      loadFromMemory( MemOff, 64) ~>
      execinstr (movbeq memOffset( MemOff), R2,  .Operands)
  ...</k>
    <regstate> RSMap:Map </regstate>
          
  rule <k>
    memLoadValue(Mem64:MInt):MemLoadValue ~> execinstr (movbeq:Opcode memOffset( MemOff:MInt):MemOffset, R2:R64,  .Operands) =>
      .
  ...</k>
    <regstate>
      RSMap:Map => updateMap(RSMap,
convToRegKeys(R2) |-> concatenateMInt( concatenateMInt( concatenateMInt( concatenateMInt( concatenateMInt( concatenateMInt( concatenateMInt( extractMInt( Mem64, 56, 64), extractMInt( Mem64, 48, 56)), extractMInt( Mem64, 40, 48)), extractMInt( Mem64, 32, 40)), extractMInt( Mem64, 24, 32)), extractMInt( Mem64, 16, 24)), extractMInt( Mem64, 8, 16)), extractMInt( Mem64, 0, 8))
      )
    </regstate>
endmodule
